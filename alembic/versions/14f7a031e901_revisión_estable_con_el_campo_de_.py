"""RevisiÃ³n estable con el campo de customer id con capacidad de ser nullo. Se borraron todas las migraciones anteriores.

Revision ID: 14f7a031e901
Revises: 
Create Date: 2024-07-02 09:11:53.048470

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '14f7a031e901'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brands',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('customers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.String(length=50), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.CheckConstraint('age >= 18'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('address', sa.String(length=50), nullable=False),
    sa.Column('phone', sa.CHAR(length=10), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('units',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('brand_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('cost_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('selling_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('reorder_level', sa.Integer(), nullable=False),
    sa.CheckConstraint('cost_price >= 0'),
    sa.CheckConstraint('quantity >= 0'),
    sa.CheckConstraint('reorder_level >= 0'),
    sa.CheckConstraint('selling_price >= 0'),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchases',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('total', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.CheckConstraint('total >= 0'),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sales',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('total', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.CheckConstraint('total >= 0'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchase_details',
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_purchase_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('total_unit_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.CheckConstraint('quantity > 0'),
    sa.CheckConstraint('total_unit_price >= 0'),
    sa.CheckConstraint('unit_purchase_price >= 0'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchases.id'], ),
    sa.PrimaryKeyConstraint('purchase_id', 'product_id')
    )
    op.create_table('sale_details',
    sa.Column('sale_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_sale_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('total_unit_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.CheckConstraint('quantity > 0'),
    sa.CheckConstraint('total_unit_price >= 0'),
    sa.CheckConstraint('unit_sale_price >= 0'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], ),
    sa.PrimaryKeyConstraint('sale_id', 'product_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sale_details')
    op.drop_table('purchase_details')
    op.drop_table('sales')
    op.drop_table('purchases')
    op.drop_table('products')
    op.drop_table('units')
    op.drop_table('suppliers')
    op.drop_table('customers')
    op.drop_table('categories')
    op.drop_table('brands')
    # ### end Alembic commands ###
